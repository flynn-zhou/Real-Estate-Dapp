"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[66428],{66428:function(t,e,n){n.d(e,{i:function(){return U}});var i=n(48764).Buffer,r=class extends Error{constructor(t,e,n){super(t),this.statusCode=e,this.details=n,this.name="PinataError"}},a=class extends r{constructor(t,e,n){super(t,e,n),this.name="NetworkError"}},s=class extends r{constructor(t,e,n){super(t,e,n),this.name="AuthenticationError"}},o=class extends r{constructor(t,e){super(t,void 0,e),this.name="ValidationError"}},u=async t=>{let e;if(!t)throw new o("Pinata configuration is missing");let n="https://api.pinata.cloud";t.endpointUrl&&(n=t.endpointUrl),e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/testAuthentication"};try{let t=await fetch(`${n}/data/testAuthentication`,{method:"GET",headers:e});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing authentication: ${t.message}`);throw new r("An unknown error occurred while testing authentication")}},c=async(t,e,n)=>{let i;if(!t)throw new o("Pinata configuration is missing");let u=n?.keys||t.pinataJwt,c=new FormData;c.append("file",e,e.name),c.append("name",n?.metadata?.name||e.name||"File from SDK"),n?.groupId&&c.append("group_id",n.groupId),i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${u}`,Source:"sdk/file"};let h="https://uploads.pinata.cloud/v3";t.uploadUrl&&(h=t.uploadUrl);try{let t=await fetch(`${h}/files`,{method:"POST",headers:i,body:c});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error uploading file: ${t.message}`);throw new r("An unknown error occurred while uploading the file")}},h=async(t,e,n)=>{let u;if(!t)throw new o("Pinata configuration is missing");let c=n?.keys||t?.pinataJwt,h=n?.metadata?.name?n?.metadata?.name:"base64 string",l=new Blob([i.from(e,"base64")]),w=new FormData;w.append("file",l,h),w.append("name",h),n?.groupId&&w.append("group_id",n.groupId),u=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${c}`,Source:"sdk/base64"};let d="https://uploads.pinata.cloud/v3";t.uploadUrl&&(d=t.uploadUrl);try{let t=await fetch(`${d}/files`,{method:"POST",headers:u,body:w});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing base64: ${t.message}`);throw new r("An unknown error occurred while trying to upload base64")}},l=async(t,e,n)=>{let i;if(!t)throw new o("Pinata configuration is missing");let u=n?.keys||t?.pinataJwt,c=new FormData,h=await fetch(e);if(!h.ok){let t=await h.text();throw new a(`HTTP error: ${t}`,h.status,t)}let l=new Blob([await h.arrayBuffer()]),w=n?.metadata?.name??"url_upload",d=new File([l],w);c.append("file",d,w),c.append("name",w),n?.groupId&&c.append("group_id",n.groupId),i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${u}`,Source:"sdk/url"};let f="https://uploads.pinata.cloud/v3";t.uploadUrl&&(f=t.uploadUrl);try{let t=await fetch(`${f}/files`,{method:"POST",headers:i,body:c});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing url: ${t.message}`);throw new r("An unknown error occurred while uploading by url")}},w=async(t,e,n)=>{let i;if(!t)throw new o("Pinata configuration is missing");let u=n?.keys||t?.pinataJwt,c=new File([new Blob([JSON.stringify(e)])],"data.json",{type:"application/json"}),h=new FormData;h.append("file",c,c.name),h.append("name",n?.metadata?.name||c.name||"File from SDK"),n?.groupId&&h.append("group_id",n.groupId),i=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${u}`,Source:"sdk/json"};let l="https://uploads.pinata.cloud/v3";t.uploadUrl&&(l=t.uploadUrl);try{let t=await fetch(`${l}/files`,{method:"POST",headers:i,body:h});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing json: ${t.message}`);throw new r("An unknown error occurred while uploading json")}},d=t=>new Promise(e=>{setTimeout(e,t)}),f=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");let i=[];n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/unpin"};let u="https://api.pinata.cloud/v3";for(let o of(t.endpointUrl&&(u=t.endpointUrl),e))try{let t=await fetch(`${u}/files/${o}`,{method:"DELETE",headers:n});if(await d(300),!t.ok){let e=await t.text();if(401===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}i.push({id:o,status:t.statusText})}catch(e){let t;t=e instanceof r?e.message:e instanceof Error?`Error deleting file ${o}: ${e.message}`:`An unknown error occurred while deleting file ${o}`,i.push({id:o,status:t})}return i},p=async(t,e)=>{if(!t)throw new o("Pinata configuration is missing");let n=new URLSearchParams;if(e){let{limit:t,pageToken:i,cidPending:r}=e;t&&n.append("limit",t.toString()),i&&n.append("pageToken",i),r&&n.append("cidPending","true")}let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);let u=`${i}/files?${n.toString()}`;try{let e;e=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,Source:"sdk/listFiles"};let n=await fetch(u,{method:"GET",headers:e});if(!n.ok){let t=await n.text();if(401===n.status||403===n.status)throw new s(`Authentication failed: ${t}`,n.status,t);throw new a(`HTTP error: ${t}`,n.status,t)}return(await n.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing list files: ${t.message}`);throw new r("An unknown error occurred while listing files")}},g=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");let i=JSON.stringify({name:e.name});n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateMetadata"};let u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/files/${e.id}`,{method:"PUT",headers:n,body:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing updateFile: ${t.message}`);throw new r("An unknown error occurred while updating file")}},m=async(t,e)=>{if(!t)throw new o("Pinata configuration is missing");let n=`${t?.pinataGateway}/files/${e}`;new URLSearchParams;let i=JSON.stringify({url:n,date:Math.floor(new Date().getTime()/1e3),expires:30,method:"GET"}),u=await fetch("https://api.pinata.cloud/v3/files/sign",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t?.pinataJwt}`},body:i}),c=await u.json();try{let t=await fetch(c.data);if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication Failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}let e=t.headers.get("content-type");return{data:e?.includes("application/json")?await t.json():e?.includes("text/")?await t.text():await t.blob(),contentType:e}}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing getCid: ${t.message}`);throw new r("An unknown error occurred while getting CID contents")}},y=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createKey"};let i=JSON.stringify(e),u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/pinata/keys`,{method:"POST",headers:n,body:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return await t.json()}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing createKey: ${t.message}`);throw new r("An unknown error occurred while creating API key")}},k=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listKeys"};let i=new URLSearchParams;if(e){let{offset:t,name:n,revoked:r,limitedUse:a,exhausted:s}=e;t&&i.append("offset",t.toString()),void 0!==r&&i.append("revoked",r.toString()),void 0!==a&&i.append("limitedUse",a.toString()),void 0!==s&&i.append("exhausted",s.toString()),n&&i.append("name",n)}let u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/pinata/keys?${i.toString()}`,{method:"GET",headers:n});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).keys}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing listKeys: ${t.message}`);throw new r("An unknown error occurred while listing API keys")}},$=t=>new Promise(e=>{setTimeout(e,t)}),T=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/revokeKeys"};let i=[],u="https://api.pinata.cloud/v3";for(let o of(t.endpointUrl&&(u=t.endpointUrl),e))try{let t=await fetch(`${u}/pinata/keys/${o}`,{method:"PUT",headers:n});if(await $(300),!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}let e=await t.json();i.push({key:o,status:e})}catch(e){let t;t=e instanceof r?e.message:e instanceof Error?`Error revoking key ${o}: ${e.message}`:`An unknown error occurred while revoking key ${o}`,i.push({key:o,status:t})}return i},P=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");let i=JSON.stringify({name:e.name,is_public:e.isPublic});n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/createGroup"};let u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/files/groups`,{method:"POST",headers:n,body:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing createGroup: ${t.message}`);throw new r("An unknown error occurred while creating a group")}},H=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/listGroups"};let i=new URLSearchParams;if(e){let{pageToken:t,nameContains:n,limit:r,isPublic:a}=e;t&&i.append("pageToken",t.toString()),a&&i.append("isPublic",a.toString()),void 0!==n&&i.append("nameContains",n.toString()),void 0!==r&&i.append("limit",r.toString())}let u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/files/groups?${i.toString()}`,{method:"GET",headers:n});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing listGroups: ${t.message}`);throw new r("An unknown error occurred while listing groups")}},A=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/getGroup"};let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);try{let t=await fetch(`${i}/files/groups/${e.groupId}`,{method:"GET",headers:n});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing getGroup: ${t.message}`);throw new r("An unknown error occurred while getting info for a group")}},E=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");let i=JSON.stringify({name:e.name,is_public:e.isPublic});n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/updateGroup"};let u="https://api.pinata.cloud/v3";t.endpointUrl&&(u=t.endpointUrl);try{let t=await fetch(`${u}/files/groups/${e.groupId}`,{method:"PUT",headers:n,body:i});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return(await t.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing updateGroup: ${t.message}`);throw new r("An unknown error occurred while updating group")}},S=async(t,e)=>{let n;if(!t)throw new o("Pinata configuration is missing");n=t.customHeaders&&Object.keys(t.customHeaders).length>0?{...t.customHeaders}:{Authorization:`Bearer ${t.pinataJwt}`,"Content-Type":"application/json",Source:"sdk/deleteGroup"};let i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);try{let t=await fetch(`${i}/files/groups/${e.groupId}`,{method:"DELETE",headers:n});if(!t.ok){let e=await t.text();if(401===t.status||403===t.status)throw new s(`Authentication failed: ${e}`,t.status,e);throw new a(`HTTP error: ${e}`,t.status,e)}return t.statusText}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing deleteGroup: ${t.message}`);throw new r("An unknown error occurred while deleting a group")}},b=async(t,e)=>{if(!t)throw new o("Pinata configuration is missing");let n=JSON.stringify({url:`${t?.pinataGateway}/files/${e.cid}`,date:e?.date||Math.floor(new Date().getTime()/1e3),expires:e.expires,method:"GET"}),i="https://api.pinata.cloud/v3";t.endpointUrl&&(i=t.endpointUrl);try{let e=await fetch(`${i}/files/sign`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t?.pinataJwt}`},body:n});if(!e.ok){let t=await e.text();if(401===e.status||403===e.status)throw new s(`Authentication Failed: ${t}`,e.status,t);throw new a(`HTTP error: ${t}`,e.status,t)}return(await e.json()).data}catch(t){if(t instanceof r)throw t;if(t instanceof Error)throw new r(`Error processing createSignedURL: ${t.message}`);throw new r("An unknown error occurred while getting signed url")}},j=t=>{let e=t?.pinataGateway;return t&&e&&(e&&!e.startsWith("https://")&&(e=`https://${e}`),t.pinataGateway=e),t},U=class{constructor(t){this.config=j(t),this.files=new x(this.config),this.upload=new O(this.config),this.gateways=new J(this.config),this.keys=new B(this.config),this.groups=new I(this.config)}setNewHeaders(t){this.config||(this.config={pinataJwt:"",customHeaders:{}}),this.config.customHeaders={...this.config.customHeaders,...t},this.files.updateConfig(this.config),this.upload.updateConfig(this.config),this.gateways.updateConfig(this.config),this.keys.updateConfig(this.config),this.groups.updateConfig(this.config)}testAuthentication(){return u(this.config)}},x=class{constructor(t){this.config=j(t)}updateConfig(t){this.config=t}list(){return new C(this.config)}delete(t){return f(this.config,t)}update(t){return g(this.config,t)}},v=class{constructor(t,e,...n){this.config=t,this.uploadFunction=e,this.args=n}addMetadata(t){return this.metadata=t,this}key(t){return this.keys=t,this}group(t){return this.groupId=t,this}then(t,e){let n=this.args[this.args.length-1]||{};return this.metadata&&(n.metadata=this.metadata),this.keys&&(n.keys=this.keys),this.groupId&&(n.groupId=this.groupId),this.args[this.args.length-1]=n,this.uploadFunction(this.config,...this.args).then(t,e)}},O=class{constructor(t){this.config=j(t)}updateConfig(t){this.config=t}file(t,e){return new v(this.config,c,t,e)}base64(t,e){return new v(this.config,h,t,e)}url(t,e){return new v(this.config,l,t,e)}json(t,e){return new v(this.config,w,t,e)}},C=class{constructor(t){this.query={},this.config=t}limit(t){return this.query.limit=t,this}cidPending(t){return this.query.cidPending=t,this}then(t){return this.fetchPage().then(t)}async fetchPage(){this.currentPageToken&&(this.query.pageToken=this.currentPageToken);let t=await p(this.config,this.query);return this.currentPageToken=t.next_page_token,t.files}async *[Symbol.asyncIterator](){for(;;){for(let t of(await this.fetchPage()))yield t;if(!this.currentPageToken)break}}async all(){let t=[];for await(let e of this)t.push(e);return t}},J=class{constructor(t){this.config=j(t)}updateConfig(t){this.config=t}get(t){return m(this.config,t)}createSignedURL(t){return b(this.config,t)}},B=class{constructor(t){this.config=j(t)}updateConfig(t){this.config=t}create(t){return y(this.config,t)}list(){return new G(this.config)}revoke(t){return T(this.config,t)}},G=class{constructor(t){this.query={},this.config=t}offset(t){return this.query.offset=t,this}revoked(t){return this.query.revoked=t,this}limitedUse(t){return this.query.limitedUse=t,this}exhausted(t){return this.query.exhausted=t,this}name(t){return this.query.name=t,this}then(t){return k(this.config,this.query).then(t)}async *[Symbol.asyncIterator](){let t=!0,e=0;for(;t;){this.query.offset=e;let n=await k(this.config,this.query);for(let t of n)yield t;0===n.length?t=!1:e+=n.length}}async all(){let t=[];for await(let e of this)t.push(e);return t}},I=class{constructor(t){this.config=j(t)}updateConfig(t){this.config=t}create(t){return P(this.config,t)}list(){return new q(this.config)}get(t){return A(this.config,t)}update(t){return E(this.config,t)}delete(t){return S(this.config,t)}},q=class{constructor(t){this.query={},this.config=t}limit(t){return this.query.limit=t,this}isPublic(t){return this.query.isPublic=t,this}then(t){return this.fetchPage().then(t=>(this.nextPageToken=t.next_page_token,t.groups)).then(t)}async fetchPage(){return this.nextPageToken&&(this.query.pageToken=this.nextPageToken),H(this.config,this.query)}async *[Symbol.asyncIterator](){for(;;){let t=await this.fetchPage();for(let e of t.groups)yield e;if(!t.next_page_token)break;this.nextPageToken=t.next_page_token}}async all(){let t=[];for await(let e of this)t.push(e);return t}}}}]);