"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[43219],{43219:function(a,e,t){t.d(e,{fulfillRequest:function(){return r}});var s=t(67347);async function r(a){let e;let{wallet:r,walletConnectClient:i,thirdwebClient:n,event:{topic:o,id:l,params:{chainId:m,request:p}},handlers:h}=a,w=r.getAccount();if(!w)throw Error("No account connected to provided wallet");try{switch(p.method){case"personal_sign":if(h?.personal_sign)e=await h.personal_sign({account:w,params:p.params});else{let{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,35382));e=await a({account:w,params:p.params})}break;case"eth_sign":if(h?.eth_sign)e=await h.eth_sign({account:w,params:p.params});else{let{handleSignRequest:a}=await Promise.resolve().then(t.bind(t,35382));e=await a({account:w,params:p.params})}break;case"eth_signTypedData":if(h?.eth_signTypedData)e=await h.eth_signTypedData({account:w,params:p.params});else{let{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,73088));e=await a({account:w,params:p.params})}break;case"eth_signTypedData_v4":if(h?.eth_signTypedData_v4)e=await h.eth_signTypedData_v4({account:w,params:p.params});else{let{handleSignTypedDataRequest:a}=await Promise.resolve().then(t.bind(t,73088));e=await a({account:w,params:p.params})}break;case"eth_signTransaction":if(h?.eth_signTransaction)e=await h.eth_signTransaction({account:w,params:p.params});else{let{handleSignTransactionRequest:a}=await Promise.resolve().then(t.bind(t,10774));e=await a({account:w,params:p.params})}break;case"eth_sendTransaction":{let a=(0,s.$)(m);if(h?.eth_sendTransaction)e=await h.eth_sendTransaction({account:w,chainId:a,params:p.params});else{let{handleSendTransactionRequest:s}=await Promise.resolve().then(t.bind(t,38184));e=await s({account:w,chainId:a,thirdwebClient:n,params:p.params})}break}case"eth_sendRawTransaction":{let a=(0,s.$)(m);if(h?.eth_sendRawTransaction)e=await h.eth_sendRawTransaction({account:w,chainId:a,params:p.params});else{let{handleSendRawTransactionRequest:s}=await Promise.resolve().then(t.bind(t,74082));e=await s({account:w,chainId:a,params:p.params})}break}case"wallet_addEthereumChain":if(h?.wallet_addEthereumChain)e=await h.wallet_addEthereumChain({wallet:r,params:p.params});else throw Error("Unsupported request method: wallet_addEthereumChain");break;case"wallet_switchEthereumChain":if(h?.wallet_switchEthereumChain)e=await h.wallet_switchEthereumChain({wallet:r,params:p.params});else{let{handleSwitchChain:a}=await Promise.resolve().then(t.bind(t,9409));e=await a({wallet:r,params:p.params})}break;default:{let a=h?.[p.method];if(a)e=await a({account:w,chainId:(0,s.$)(m),params:p.params});else throw Error(`Unsupported request method: ${p.method}`)}}}catch(a){e={code:"object"==typeof a&&null!==a&&"code"in a?a.code:500,message:"object"==typeof a&&null!==a&&"message"in a?a.message:"Unknown error"}}i.respond({topic:o,response:{id:l,jsonrpc:"2.0",result:e}})}}}]);